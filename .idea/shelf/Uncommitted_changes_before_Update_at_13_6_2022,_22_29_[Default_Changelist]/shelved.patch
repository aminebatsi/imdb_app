Index: lib/MyHomePage.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:convert';\n\nimport 'package:tmdb_api/tmdb_api.dart';\n\nimport 'package:flutter/material.dart';\n\nimport 'SelectedFilm.dart';\n\nimport 'package:http/http.dart' as http;\n\nclass MyHomePage extends StatefulWidget {\n  final String grandCategorie;\n  final String category;\n  const MyHomePage({\n    Key? key,\n    required this.grandCategorie,\n    this.category = 'All',\n    //this.selectedCategory = 0,\n  }) : super(key: key);\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n  int selectedCategory = 0;\n  String textCategory = 'All';\n  List<String> category = [\n    'All',\n    'Action',\n    'Animation',\n    'Comedy',\n    'Crime',\n    'Drama',\n    'Family',\n  ];\n\n  var categoryGenres = [\n    {\"id\": 28, \"index\": 1},\n    {\"id\": 16, \"index\": 2},\n    {\"id\": 35, \"index\": 3},\n    {\"id\": 80, \"index\": 4},\n    {\"id\": 18, \"index\": 5},\n    {\"id\": 10751, \"index\": 6},\n  ];\n  var Allgenres = {\n    {\"id\": 28, \"name\": \"Action\"},\n    {\"id\": 12, \"name\": \"Adventure\"},\n    {\"id\": 16, \"name\": \"Animation\"},\n    {\"id\": 35, \"name\": \"Comedy\"},\n    {\"id\": 80, \"name\": \"Crime\"},\n    {\"id\": 99, \"name\": \"Documentary\"},\n    {\"id\": 18, \"name\": \"Drama\"},\n    {\"id\": 10751, \"name\": \"Family\"},\n    {\"id\": 14, \"name\": \"Fantasy\"},\n    {\"id\": 36, \"name\": \"History\"},\n    {\"id\": 27, \"name\": \"Horror\"},\n    {\"id\": 10402, \"name\": \"Music\"},\n    {\"id\": 9648, \"name\": \"Mystery\"},\n    {\"id\": 10749, \"name\": \"Romance\"},\n    {\"id\": 878, \"name\": \"Science Fiction\"},\n    {\"id\": 10770, \"name\": \"TV Movie\"},\n    {\"id\": 53, \"name\": \"Thriller\"},\n    {\"id\": 10752, \"name\": \"War\"},\n    {\"id\": 37, \"name\": \"Western\"},\n    {\"id\": 10759, \"name\": \"Action & Adventure\"},\n    {\"id\": 18, \"name\": \"Drama\"},\n    {\"id\": 10762, \"name\": \"Kids\"},\n    {\"id\": 10763, \"name\": \"News\"},\n    {\"id\": 10764, \"name\": \"Reality\"},\n    {\"id\": 10765, \"name\": \"Sci-Fi & Fantasy\"},\n    {\"id\": 10766, \"name\": \"Soap\"},\n    {\"id\": 10767, \"name\": \"Talk\"},\n    {\"id\": 10768, \"name\": \"War & Politics\"},\n    {\"id\": 37, \"name\": \"Western\"}\n  };\n  var allFIlms = [];\n  List trendingMovies = [];\n  var filtredMovies = [];\n  final String apiKey = 'b14e6584347a3199c72afa43baddcdf8';\n  final readAccessToken =\n      'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTRlNjU4NDM0N2EzMTk5YzcyYWZhNDNiYWRkY2RmOCIsInN1YiI6IjYyOWY5NTJmYThiMmNhMDA2NjA5MGJhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IVYqNM7Euk2jX77eh4QiMVX-4q49RctBWLrV7gNDCy4';\n\n  loadMovies() async {\n    TMDB tmdbLogs = TMDB(ApiKeys(apiKey, readAccessToken),\n        logConfig: const ConfigLogger(\n          showLogs: true,\n          showErrorLogs: true,\n        ));\n    if (widget.grandCategorie == 'Trending') {\n      Map trendingFilmPage1 = await tmdbLogs.v3.trending.getTrending(page: 1);\n      Map trendingFilmPage2 = await tmdbLogs.v3.trending.getTrending(page: 2);\n      Map trendingFilmPage3 = await tmdbLogs.v3.trending.getTrending(page: 3);\n      Map trendingFilmPage4 = await tmdbLogs.v3.trending.getTrending(page: 4);\n      Map trendingFilmPage5 = await tmdbLogs.v3.trending.getTrending(page: 5);\n      Map trendingFilmPage6 = await tmdbLogs.v3.trending.getTrending(page: 6);\n      Map trendingFilmPage7 = await tmdbLogs.v3.trending.getTrending(page: 7);\n\n      allFIlms = [\n        ...trendingFilmPage1['results'],\n        ...trendingFilmPage2['results'],\n        ...trendingFilmPage3['results'],\n        ...trendingFilmPage4['results'],\n        ...trendingFilmPage5['results'],\n        ...trendingFilmPage6['results'],\n        ...trendingFilmPage7['results'],\n      ];\n    } else {\n      //print(myController.text);\n      var topJson1 = await http.get(Uri.parse(\n          'https://api.themoviedb.org/3/movie/top_rated?api_key=b14e6584347a3199c72afa43baddcdf8&language=en-US'));\n\n      var topRated1 = jsonDecode(topJson1.body);\n\n      var topJson2 = await http.get(Uri.parse(\n          'https://api.themoviedb.org/3/movie/top_rated?api_key=b14e6584347a3199c72afa43baddcdf8&language=en-US&page=2'));\n\n      var topRated2 = jsonDecode(topJson2.body);\n\n      var topJson3 = await http.get(Uri.parse(\n          'https://api.themoviedb.org/3/movie/top_rated?api_key=b14e6584347a3199c72afa43baddcdf8&language=en-US&page=3'));\n\n      var topRated3 = jsonDecode(topJson3.body);\n\n      var topJson4 = await http.get(Uri.parse(\n          'https://api.themoviedb.org/3/movie/top_rated?api_key=b14e6584347a3199c72afa43baddcdf8&language=en-US&page=4'));\n\n      var topRated4 = jsonDecode(topJson4.body);\n\n      allFIlms = [\n        ...topRated1['results'],\n        ...topRated2['results'],\n        ...topRated3['results'],\n        ...topRated4['results']\n      ];\n\n      print(allFIlms);\n    }\n\n    //var tempMovies = allFIlms;\n    //int tempSelectedCategory = widget.selectedCategory;\n    if (selectedCategory != 0) {\n      var tempMovies = allFIlms;\n      filtredMovies = [];\n      for (int i = 0; i < tempMovies.length; i++) {\n        for (int j = 0; j < tempMovies[i]['genre_ids'].length; j++) {\n          if (tempMovies[i]['genre_ids'][j] ==\n              categoryGenres[selectedCategory - 1]['id']) {\n            //print(selectedCategory);\n            filtredMovies.add(tempMovies[i]);\n          }\n        }\n      }\n    }\n    print(selectedCategory);\n    print(textCategory);\n    //print(allFIlms[0]['poster_path']);\n    setState(() {\n      if (selectedCategory == 0) {\n        trendingMovies = allFIlms;\n      } else {\n        trendingMovies = filtredMovies;\n      }\n    });\n  }\n\n  @override\n  void initState() {\n    // TODO: implement initState\n    loadMovies();\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    Size size = MediaQuery.of(context).size;\n    //int tempSelectedCategory = selectedCategory;\n    Color KtextColor = const Color(0xFF535353);\n    Color KtextLightColor = const Color(0xFFACACAC);\n    int SizeScreen() {\n      if (size.width < 667.0) {\n        return 2;\n      } else {\n        return 4;\n      }\n    }\n\n    return Scaffold(\n      appBar: AppBar(\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        leading: IconButton(\n          icon: Image.asset('arrow-left-line.png'),\n          onPressed: () {},\n        ),\n        actions: const <Widget>[\n          SizedBox(\n            width: 10,\n          )\n        ],\n      ),\n      body: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: <Widget>[\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 20),\n            child: Text(\n              widget.grandCategorie,\n              style: Theme.of(context).textTheme.headline5,\n            ),\n          ),\n          //MyWidget(selectedCategory: widget.selectedCategory),\n          Padding(\n            padding: const EdgeInsets.symmetric(vertical: 20),\n            child: SizedBox(\n              height: 25,\n              child: ListView.builder(\n                  scrollDirection: Axis.horizontal,\n                  itemCount: category.length,\n                  itemBuilder: ((context, index) => GestureDetector(\n                        onTap: () {\n                          setState(() {\n                            selectedCategory = index;\n                            textCategory = category[index];\n                          });\n\n                          loadMovies();\n                          /*Navigator.push(\n                            context,\n                            MaterialPageRoute(\n                              builder: (context) => MyHomePage(\n                                grandCategorie: 'In Cinema',\n                                //category: category[index],\n                              ),\n                            ),\n                          );*/\n                        },\n                        child: Padding(\n                          padding: const EdgeInsets.symmetric(horizontal: 20),\n                          child: Column(\n                            crossAxisAlignment: CrossAxisAlignment.start,\n                            children: [\n                              Text(\n                                category[index],\n                                style: TextStyle(\n                                    fontWeight: FontWeight.bold,\n                                    color: selectedCategory == index\n                                        ? KtextColor\n                                        : KtextLightColor),\n                              ),\n                              Container(\n                                margin: const EdgeInsets.only(top: 5),\n                                height: 2,\n                                width: 30,\n                                color: selectedCategory == index\n                                    ? Colors.black\n                                    : Colors.transparent,\n                              )\n                            ],\n                          ),\n                        ),\n                      ))),\n            ),\n          ),\n          Expanded(\n            child: Padding(\n              padding: const EdgeInsets.only(\n                  top: 20, right: 20, left: 20, bottom: 20),\n              child: GridView.builder(\n                  itemCount: trendingMovies.length,\n                  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                      crossAxisCount: SizeScreen(),\n                      childAspectRatio: 0.75,\n                      mainAxisSpacing: 20,\n                      crossAxisSpacing: 20),\n                  itemBuilder: (context, index) => FilmItem(\n                        size: size,\n                        images:\n                            \"https://image.tmdb.org/t/p/w500/${trendingMovies[index]['poster_path']}\",\n                        FilmTitle: trendingMovies[index]['title'] ??\n                            trendingMovies[index]['name'],\n                        overview:\n                            trendingMovies[index]['overview'] ?? 'unavailable',\n                        realeaseDate: trendingMovies[index]['release_date'] ??\n                            'undefined',\n                      )),\n            ),\n          )\n        ],\n      ),\n    );\n  }\n}\n\nclass FilmItem extends StatelessWidget {\n  const FilmItem(\n      {Key? key,\n      required this.size,\n      required this.images,\n      required this.FilmTitle,\n      required this.overview,\n      required this.realeaseDate})\n      : super(key: key);\n\n  final Size size;\n  final String images;\n  final String FilmTitle;\n  final String overview;\n  final String realeaseDate;\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: <Widget>[\n          Expanded(\n              child: GestureDetector(\n            onTap: () {\n              Navigator.push(\n                context,\n                MaterialPageRoute(\n                  builder: (context) => SelectedFilm(\n                    images: images,\n                    FilmTitle: FilmTitle,\n                    overview: overview,\n                    realeaseDate: realeaseDate,\n                  ),\n                ),\n              );\n            },\n            child: Container(\n                padding: const EdgeInsets.all(20),\n                decoration: BoxDecoration(\n                    image: DecorationImage(\n                        image: NetworkImage(images), fit: BoxFit.fill),\n                    borderRadius: const BorderRadius.all(Radius.circular(20)))),\n          )),\n          SizedBox(\n            height: 38,\n            child: Padding(\n              padding: const EdgeInsets.only(top: 8, left: 0, right: 10),\n              child: Text(\n                FilmTitle,\n                style: const TextStyle(fontFamily: 'Comfortaa'),\n              ),\n            ),\n          ),\n        ]);\n  }\n}\n\nclass MyWidget extends StatefulWidget {\n  int selectedCategory;\n  MyWidget({Key? key, this.selectedCategory = 0}) : super(key: key);\n\n  @override\n  State<MyWidget> createState() => _MyWidgetState();\n}\n\nclass _MyWidgetState extends State<MyWidget> {\n  List<String> category = [\n    'All',\n    'Action',\n    'Animation',\n    'Comedy',\n    'Crime',\n    'Drama',\n    'Family',\n  ];\n  //int selectedCategory ;\n  Color KtextColor = const Color(0xFF535353);\n  Color KtextLightColor = const Color(0xFFACACAC);\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 20),\n      child: SizedBox(\n        height: 25,\n        child: ListView.builder(\n            scrollDirection: Axis.horizontal,\n            itemCount: category.length,\n            itemBuilder: ((context, index) => GestureDetector(\n                  onTap: () {\n                    setState(() {\n                      widget.selectedCategory = index;\n                    });\n\n                    Navigator.push(\n                      context,\n                      MaterialPageRoute(\n                        builder: (context) => MyHomePage(\n                          grandCategorie: 'In Cinema',\n                          category: category[index],\n                          //selectedCategory: index\n                        ),\n                      ),\n                    );\n                  },\n                  child: Padding(\n                    padding: const EdgeInsets.symmetric(horizontal: 20),\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          category[index],\n                          style: TextStyle(\n                              fontWeight: FontWeight.bold,\n                              color: widget.selectedCategory == index\n                                  ? KtextColor\n                                  : KtextLightColor),\n                        ),\n                        Container(\n                          margin: const EdgeInsets.only(top: 5),\n                          height: 2,\n                          width: 30,\n                          color: widget.selectedCategory == index\n                              ? Colors.black\n                              : Colors.transparent,\n                        )\n                      ],\n                    ),\n                  ),\n                ))),\n      ),\n    );\n  }\n}\n\n/*\nclass CircleTabIndicator extends Decoration {\n  final BoxPainter _painter;\n\n  CircleTabIndicator({required Color color, required double radius})\n      : _painter = _CirclePainter(color, radius);\n\n  @override\n  BoxPainter createBoxPainter([VoidCallback? onChanged]) => _painter;\n}\n\nclass _CirclePainter extends BoxPainter {\n  final Paint _paint;\n  final double radius;\n\n  _CirclePainter(Color color, this.radius)\n      : _paint = Paint()\n          ..color = color\n          ..isAntiAlias = true;\n\n  @override\n  void paint(Canvas canvas, Offset offset, ImageConfiguration cfg) {\n    final Offset circleOffset =\n        offset + Offset(cfg.size!.width / 2, cfg.size!.height - radius - 5);\n    canvas.drawCircle(circleOffset, radius, _paint);\n  }\n}\n*/\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/MyHomePage.dart b/lib/MyHomePage.dart
--- a/lib/MyHomePage.dart	(revision 5147c116053f3526db15da929971f4de60d25522)
+++ b/lib/MyHomePage.dart	(date 1655074452550)
@@ -1,9 +1,13 @@
 import 'dart:convert';
 
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:imdb_app/model/UserModel.dart';
 import 'package:tmdb_api/tmdb_api.dart';
 
 import 'package:flutter/material.dart';
 
+import 'LoginPage.dart';
 import 'SelectedFilm.dart';
 
 import 'package:http/http.dart' as http;
@@ -11,6 +15,7 @@
 class MyHomePage extends StatefulWidget {
   final String grandCategorie;
   final String category;
+
   const MyHomePage({
     Key? key,
     required this.grandCategorie,
@@ -23,6 +28,9 @@
 }
 
 class _MyHomePageState extends State<MyHomePage> {
+
+  User? user = FirebaseAuth.instance.currentUser;
+  UserModel loggedUser = UserModel();
   int selectedCategory = 0;
   String textCategory = 'All';
   List<String> category = [
@@ -164,16 +172,26 @@
     });
   }
 
+
   @override
   void initState() {
     // TODO: implement initState
     loadMovies();
     super.initState();
+    FirebaseFirestore.instance.collection("Users").doc(user!.uid).get()
+        .then((value) {
+      setState(() {
+        loggedUser = UserModel.fromMap(value.data());
+      });
+    });
   }
+
 
   @override
   Widget build(BuildContext context) {
-    Size size = MediaQuery.of(context).size;
+    Size size = MediaQuery
+        .of(context)
+        .size;
     //int tempSelectedCategory = selectedCategory;
     Color KtextColor = const Color(0xFF535353);
     Color KtextLightColor = const Color(0xFFACACAC);
@@ -202,11 +220,21 @@
       body: Column(
         crossAxisAlignment: CrossAxisAlignment.start,
         children: <Widget>[
+          Row(
+            mainAxisAlignment: MainAxisAlignment.end,
+            children: [
+              Text("${loggedUser.name} "),
+              Text("${loggedUser.lastName}")
+            ],
+          ),
           Padding(
             padding: const EdgeInsets.symmetric(horizontal: 20),
             child: Text(
               widget.grandCategorie,
-              style: Theme.of(context).textTheme.headline5,
+              style: Theme
+                  .of(context)
+                  .textTheme
+                  .headline5,
             ),
           ),
           //MyWidget(selectedCategory: widget.selectedCategory),
@@ -217,7 +245,8 @@
               child: ListView.builder(
                   scrollDirection: Axis.horizontal,
                   itemCount: category.length,
-                  itemBuilder: ((context, index) => GestureDetector(
+                  itemBuilder: ((context, index) =>
+                      GestureDetector(
                         onTap: () {
                           setState(() {
                             selectedCategory = index;
@@ -273,14 +302,15 @@
                       childAspectRatio: 0.75,
                       mainAxisSpacing: 20,
                       crossAxisSpacing: 20),
-                  itemBuilder: (context, index) => FilmItem(
+                  itemBuilder: (context, index) =>
+                      FilmItem(
                         size: size,
                         images:
-                            "https://image.tmdb.org/t/p/w500/${trendingMovies[index]['poster_path']}",
+                        "https://image.tmdb.org/t/p/w500/${trendingMovies[index]['poster_path']}",
                         FilmTitle: trendingMovies[index]['title'] ??
                             trendingMovies[index]['name'],
                         overview:
-                            trendingMovies[index]['overview'] ?? 'unavailable',
+                        trendingMovies[index]['overview'] ?? 'unavailable',
                         realeaseDate: trendingMovies[index]['release_date'] ??
                             'undefined',
                       )),
@@ -290,16 +320,23 @@
       ),
     );
   }
+
+  Future<void> logout(BuildContext context) async {
+    await FirebaseAuth.instance.signOut();
+    Navigator.of(context)
+        .pushReplacement(MaterialPageRoute(
+        builder: (context) => LoginPage())
+    );
+  }
 }
 
 class FilmItem extends StatelessWidget {
-  const FilmItem(
-      {Key? key,
-      required this.size,
-      required this.images,
-      required this.FilmTitle,
-      required this.overview,
-      required this.realeaseDate})
+  const FilmItem({Key? key,
+    required this.size,
+    required this.images,
+    required this.FilmTitle,
+    required this.overview,
+    required this.realeaseDate})
       : super(key: key);
 
   final Size size;
@@ -315,26 +352,28 @@
         children: <Widget>[
           Expanded(
               child: GestureDetector(
-            onTap: () {
-              Navigator.push(
-                context,
-                MaterialPageRoute(
-                  builder: (context) => SelectedFilm(
-                    images: images,
-                    FilmTitle: FilmTitle,
-                    overview: overview,
-                    realeaseDate: realeaseDate,
-                  ),
-                ),
-              );
-            },
-            child: Container(
-                padding: const EdgeInsets.all(20),
-                decoration: BoxDecoration(
-                    image: DecorationImage(
-                        image: NetworkImage(images), fit: BoxFit.fill),
-                    borderRadius: const BorderRadius.all(Radius.circular(20)))),
-          )),
+                onTap: () {
+                  Navigator.push(
+                    context,
+                    MaterialPageRoute(
+                      builder: (context) =>
+                          SelectedFilm(
+                            images: images,
+                            FilmTitle: FilmTitle,
+                            overview: overview,
+                            realeaseDate: realeaseDate,
+                          ),
+                    ),
+                  );
+                },
+                child: Container(
+                    padding: const EdgeInsets.all(20),
+                    decoration: BoxDecoration(
+                        image: DecorationImage(
+                            image: NetworkImage(images), fit: BoxFit.fill),
+                        borderRadius: const BorderRadius.all(
+                            Radius.circular(20)))),
+              )),
           SizedBox(
             height: 38,
             child: Padding(
@@ -351,6 +390,7 @@
 
 class MyWidget extends StatefulWidget {
   int selectedCategory;
+
   MyWidget({Key? key, this.selectedCategory = 0}) : super(key: key);
 
   @override
@@ -367,6 +407,7 @@
     'Drama',
     'Family',
   ];
+
   //int selectedCategory ;
   Color KtextColor = const Color(0xFF535353);
   Color KtextLightColor = const Color(0xFFACACAC);
@@ -380,7 +421,8 @@
         child: ListView.builder(
             scrollDirection: Axis.horizontal,
             itemCount: category.length,
-            itemBuilder: ((context, index) => GestureDetector(
+            itemBuilder: ((context, index) =>
+                GestureDetector(
                   onTap: () {
                     setState(() {
                       widget.selectedCategory = index;
@@ -389,11 +431,12 @@
                     Navigator.push(
                       context,
                       MaterialPageRoute(
-                        builder: (context) => MyHomePage(
-                          grandCategorie: 'In Cinema',
-                          category: category[index],
-                          //selectedCategory: index
-                        ),
+                        builder: (context) =>
+                            MyHomePage(
+                              grandCategorie: 'In Cinema',
+                              category: category[index],
+                              //selectedCategory: index
+                            ),
                       ),
                     );
                   },
